import { Label, Op } from './syntax.grammar.terms'
const knownInstructions = new Set([
  'sll',
  'srl',
  'sra',
  'sllv',
  'srlv',
  'srav',
  'jr',
  'jalr',
  'mfhi',
  'mthi',
  'mflo',
  'mtlo',
  'mult',
  'multu',
  'div',
  'divu',
  'add',
  'addu',
  'sub',
  'subu',
  'and',
  'or',
  'xor',
  'nor',
  'sltu',
  'slt',
  'bltz',
  'bgez',
  'bltzal',
  'bgezal',
  'j',
  'jal',
  'beq',
  'bne',
  'blez',
  'bgtz',
  'addi',
  'addiu',
  'slti',
  'sltiu',
  'andi',
  'ori',
  'xori',
  'lui',
  'llo',
  'lhi',
  'trap',
  'syscall',
  'lb',
  'lh',
  'lw',
  'lbu',
  'lhu',
  'sb',
  'sh',
  'sw',
  'madd',
  'maddu',
  'mul',
  'msub',
  'msubu',
  'abs',
  'blt',
  'bgt',
  'ble',
  'bge',
  'neg',
  'negu',
  'not',
  'li',
  'la',
  'move',
  'sge',
  'sgt',
  'b',
  'subi',
  'subiu',
  'nop',
  'bltu',
  'bleu',
  'bgtu',
  'bgeu',
  'sle',
  'sgeu',
  'sgtu',
  'sleu',
  'sne',
  'seq',
  'beqz',
  'bnez',
])

export let specializeIdent = (x) => {
  if (x.endsWith(':')) return Label
  if (knownInstructions.has(x)) {
    return Op
  }
  return -1
}
